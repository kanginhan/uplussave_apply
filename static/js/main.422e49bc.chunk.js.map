{"version":3,"sources":["utils/constants.js","components/SnackAlert.js","utils/palette.js","components/Header.js","components/InfoItem.js","components/SelectControl.js","components/DocChecker.js","components/MoveSteps.js","components/steps/BasicInfo.js","components/InputControl.js","components/SearchAddress.js","components/steps/ApplicantInfo.js","components/steps/FeeInfo.js","components/steps/DeliveryInfo.js","components/steps/RecieptInfo.js","App.js","serviceWorker.js","index.js","image/idcard_correct.png","image/idcard_wrong.png"],"names":["callplanOptions","hpcolorOptions","pay_gubunOptions","pay_methodOptions","paper_methodOptions","SnackAlert","open","setOpen","message","Snackbar","anchorOrigin","vertical","horizontal","onClose","key","palette","pink","light_pink","deep_pink","green","light_green","gray","light_gray","yellow","deep_yellow","deep_indigo","Container","styled","div","LogoName","Typography","Header","variant","Label","Value","InfoItem","label","value","StyledControl","FormControl","StyledSelect","Select","SelectControl","name","options","onChange","InputLabel","htmlFor","native","autoWidth","inputProps","e","target","map","option","i","props","check","CheckIcon","Icon","DocContents","HeaderBar","FooterBar","FooterButton","withStyles","root","borderRadius","backgroundColor","width","padding","Button","DocChecker","children","title","hadleAgree","useState","docOpen","setDocOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","onClick","fontSize","Dialog","disableElevation","StyledButton","marginLeft","MoveSteps","movePrev","moveNext","validate","finish","color","size","BasicInfo","applyData","setApplyData","showAlert","applyOf","x","callplan","hpcolor","conditionCheck","StyledTextField","marginBottom","TextField","InputControl","maxLength","numberOnly","phoneNumber","bankNumber","disabled","multiline","getPhoneNumber","str","tmp","length","substr","fullWidth","rowsMax","id","onInput","replace","slice","SearchButton","Postcode","onComplete","data","fullAddress","address","extraAddress","userSelectedType","roadAddress","jibunAddress","bname","buildingName","zonecode","SubContainer","SubTitle","StyledFormControlLabel","marginTop","FormControlLabel","ApplicantInfo","emailCheck","email_address","test","uname","birth","hp2","email","zip","SearchAddress","addr","addr1","addr2","hpnumber","marginleft","hpnumber2","hpnumber3","memo","control","Switch","checked","minor","labelPlacement","Collapse","in","parent","parent_birth","parent_tel","parent_rel","SubDescription","FeeInfo","pay_gubun","pay_method","Checkbox","paddr_copy","pzip","paddr1","paddr2","bank","banknum","bankowner","owner_real","owner_birth","DeliveryInfo","rname","rhp","raddr_copy","rzip","raddr1","raddr2","StyledUl","ul","StyledInput","input","StyledAlert","Alert","RecieptInfo","paper_method","type","severity","style","src","idcard_correct","alt","idcard_wrong","contractCheck","privateInfoCheck","window","confirm","AlertMessage","App","activeStep","setActiveStep","completeSteps","setCompleteSteps","alertOpen","setAlertOpen","alertMessage","setAlertMessage","regist_form","useRef","useEffect","emailjs","init","ref","Stepper","orientation","Step","completed","StepLabel","StepContent","alert","setTimeout","location","reload","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.422e49bc.chunk.js","sourcesContent":["//요금제\nexport const callplanOptions = [\n    \"선불 300MB_1Mbps(음성&문자:무제한/데이터300MB+1Mbps무제한)\",\n    \"선불10GB/100분(음성&문자100분100건/데이터10GB)\",\n    \"선불300MB(음성&문자:무제한/데이터300MB+3Mbps무제한)\",\n    \"선불15GB+/100분(음성&문자100분100건/데이터15GB+3Mbps무제한)\",\n    \"선불11GB+(음성&문자:무제한/데이터11GB+3Mbps무제한)\",\n    \"선불 데이터 통화 마음껏(음성&문자:무제한/데이터11GB+일2GB+3Mbps무제한)\",\n];\n\n//옵션\nexport const hpcolorOptions = [\"멀티유심 (전단말기호환가능)\"];\n\n//요금청구 방법\nexport const pay_gubunOptions = [\"계좌이체\"];\n\n//요금확인 방법\nexport const pay_methodOptions = [\n    \"기타(우편청구서)\",\n    \"문자청구서\",\n    \"이메일청구서\",\n];\n\n//구비서류 접수방법\nexport const paper_methodOptions = [\n    \"파일첨부\",\n    \"이메일\",\n    \"팩스\",\n];","import React from 'react';\nimport { Snackbar } from \"@material-ui/core\";\n\nconst SnackAlert = ({open, setOpen, message}) => {\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            open={open}\n            onClose={() => setOpen(false)}\n            message={message}\n            key={message}\n        />\n    );\n};\n\nexport default SnackAlert;","import pink from '@material-ui/core/colors/pink';\nimport green from '@material-ui/core/colors/green';\nimport yellow from '@material-ui/core/colors/yellow';\n\nconst palette = {\n    pink: pink[500],\n    light_pink: pink[300],\n    deep_pink: pink[700],\n    green: green[500],\n    light_green: green[300],\n    gray: \"#888\",\n    light_gray: \"#eee\",\n    yellow: yellow[500],\n    deep_yellow: yellow[700],\n    deep_indigo: \"#0d1243\",\n};\n\nexport default palette;","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport palette from \"../utils/palette\";\n\nconst Container = styled.div`\n    background-color: ${palette.pink};\n    padding-top: 5%;\n    padding-left: 5%;\n    padding-right: 5%;\n    padding-bottom: 5%;\n    color: white;\n`;\n\nconst LogoName = styled(Typography)`\n    margin-bottom: 0.5rem !important;\n`;\n\nconst Header = () => {\n    return (\n        <Container>\n            <LogoName variant=\"body2\">(주)태화 U+ 알뜰모바일</LogoName>\n            <Typography variant=\"h5\">온라인 신청서</Typography>\n        </Container>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport palette from \"../utils/palette\";\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1rem !important;\n    font-size: 0.8rem;\n`;\n\nconst Label = styled.div`\n    color: ${palette.gray};\n`;\n\nconst Value = styled.div`\n    color: ${palette.green};\n    font-weight: bold;\n`;\n\nconst InfoItem = ({label, value}) => {\n    return (\n        <Container>\n            <Label>{label}</Label>\n            <Value>{value}</Value>\n        </Container>\n    );\n};\n\nexport default InfoItem;","import React from \"react\";\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nconst StyledControl = styled(FormControl)`\n    /* min-width: 300px; */\n    margin-bottom: 1rem !important;\n`;\n\nconst StyledSelect = styled(Select)`\n    font-size: 0.9rem !important;\n`;\n\nconst SelectControl = ({ name, value, label, options, onChange }) => {\n    const handleChange = (e) => onChange(e.target.value);\n\n    return (\n        <StyledControl>\n            <InputLabel htmlFor={name}>{label}</InputLabel>\n            <StyledSelect native autoWidth inputProps={{ name }} value={value} onChange={handleChange}>\n                {options.map((option, i) => {\n                    return <option key={i} value={option}>{option}</option>;\n                })}\n            </StyledSelect>\n        </StyledControl>\n    );\n};\n\nexport default SelectControl;\n","import React, { useState } from \"react\";\nimport { Icon, Dialog, Button, useMediaQuery } from \"@material-ui/core\";\nimport { withStyles, useTheme } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport palette from \"../utils/palette\";\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 0.7rem;\n    background-color: ${(props) => (props.check ? palette.yellow : palette.light_gray)};\n    font-size: 0.87rem;\n    border-radius: 0.2rem;\n    margin-top: 0.5rem;\n    margin-bottom: 1rem;\n    cursor: pointer;\n`;\n\nconst CheckIcon = styled(Icon)`\n    color: ${(props) => (props.check ? \"black\" : palette.gray)};\n`;\nconst Label = styled.div`\n    margin-left: 0.5rem;\n`;\n\nconst DocContents = styled.div`\n    font-size: 0.8rem;\n    padding: 1rem;\n`;\n\nconst HeaderBar = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: sticky;\n    left: 0;\n    top: 0;\n    right: 0;\n    padding: 1rem;\n    color: white;\n    background-color: ${palette.deep_indigo};\n`;\n\nconst FooterBar = styled.div`\n    position: sticky;\n    left: 0;\n    right: 0;\n    bottom: 0;\n`;\n\nconst FooterButton = withStyles({\n    root: {\n        borderRadius: 0,\n        backgroundColor: palette.yellow,\n        width: \"100%\",\n        padding: \"0.7rem\",\n        \"&:hover\": {\n            backgroundColor: palette.yellow,\n        },\n        \"&:active\": {\n            backgroundColor: palette.yellow,\n        },\n    },\n})(Button);\n\nconst DocChecker = ({ children, check, title, hadleAgree }) => {\n    const [docOpen, setDocOpen] = useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const handleClickChecker = () => setDocOpen(true);\n    const handleDocClose = () => setDocOpen(false);\n    const handleClickAgree = () => {\n        setDocOpen(false);\n        hadleAgree();\n    };\n\n    return (\n        <>\n            <Container check={check} onClick={handleClickChecker}>\n                <CheckIcon fontSize=\"small\" check={check}>\n                    {check ? \"check\" : \"check_circle_outlined\"}\n                </CheckIcon>\n                <Label>{title}</Label>\n                <div></div>\n                <Icon>chevron_right</Icon>\n            </Container>\n\n            <Dialog fullScreen={fullScreen} open={docOpen} onClose={handleDocClose}>\n                <HeaderBar>\n                    <Icon>description</Icon>\n                    {title}\n                    <div></div>\n                </HeaderBar>\n\n                <DocContents>{children}</DocContents>\n                <FooterBar>\n                    <FooterButton variant=\"contained\" disableElevation onClick={handleClickAgree}>\n                        동의합니다\n                    </FooterButton>\n                </FooterBar>\n            </Dialog>\n        </>\n    );\n};\n\nexport default DocChecker;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 2rem;\n`;\n\nconst StyledButton = withStyles({\n    root: {\n        borderRadius: \"5rem\",\n        \"& + &\": {\n            marginLeft: \"0.5rem\",\n        }\n    },\n})(Button);\n\nconst MoveSteps = ({ movePrev, moveNext, validate, finish }) => {\n    const handleMoveNext = () => {\n        if (validate && !validate()) {\n            return;\n        }\n        moveNext();\n    };\n    const handleFinish = () => {\n        if (validate && !validate()) {\n            return;\n        }\n        finish();\n    };\n\n    return (\n        <Container>\n            {movePrev && (\n                <StyledButton variant=\"contained\" color=\"default\" size=\"small\" onClick={movePrev}>\n                    이전\n                </StyledButton>\n            )}\n            {moveNext && (\n                <StyledButton variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleMoveNext}>\n                    다음\n                </StyledButton>\n            )}\n            {finish && (\n                <StyledButton variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleFinish}>\n                    신청하기\n                </StyledButton>\n            )}\n        </Container>\n    );\n};\n\nexport default MoveSteps;\n","import React from \"react\";\nimport { callplanOptions, hpcolorOptions } from \"../../utils/constants\";\nimport InfoItem from \"../InfoItem\";\nimport SelectControl from \"../SelectControl\";\nimport DocChecker from \"../DocChecker\";\nimport MoveSteps from \"../MoveSteps\";\n\nconst BasicInfo = ({ applyData, setApplyData, moveNext, showAlert }) => {\n    const agreeWithDoc = () => {\n        setApplyData({ ...applyData, conditionCheck: true });\n    };\n    const validate = () => {\n        if (!applyData.conditionCheck) {\n            showAlert(\"판매조건 안내사항에 동의해 주시기 바랍니다\");\n            return false;\n        }\n        return true;\n    };\n    const applyOf = (key) => (x) => setApplyData({ ...applyData, [key]: x });\n\n    return (\n        <>\n            <InfoItem label=\"신청상품\" value=\"U+알뜰모바일 선불유심\"></InfoItem>\n            <InfoItem label=\"가입구분\" value=\"신규가입\"></InfoItem>\n            <InfoItem label=\"약정기간\" value=\"1개월\"></InfoItem>\n            <InfoItem label=\"출고가/할부원금\" value=\"0원 / 0원\"></InfoItem>\n            <InfoItem label=\"가입비/유심비\" value=\"0원(면제) / 0원(면제)\"></InfoItem>\n            <InfoItem label=\"보조금\" value=\"개통시 첫달 기본료전액 무료충전\"></InfoItem>\n\n            <SelectControl\n                name=\"callplan\"\n                label=\"요금제*\"\n                options={callplanOptions}\n                value={applyData.callplan}\n                onChange={applyOf(\"callplan\")}\n            ></SelectControl>\n\n            <SelectControl\n                name=\"hpcolor\"\n                label=\"옵션*\"\n                options={hpcolorOptions}\n                value={applyData.hpcolor}\n                onChange={applyOf(\"hpcolor\")}\n            ></SelectControl>\n\n            <DocChecker check={applyData.conditionCheck} title=\"판매조건 안내사항\" hadleAgree={agreeWithDoc}>\n                <p>\n                    <b>※ 개통 전 주의사항 ※</b>\n                </p>\n                <p>스팸 문자 발송은 한국 방송통신 진흥협회로부터 자동으로 필터링 됩니다.</p>\n                <p>스팸 문자(도박/대출/성인광고/보이스피싱) 발송 시 SK, KT, LG 가입회선 전체에 대하여 정지되며 </p>\n                <p>앞으로의 휴대폰 가입이 일체 거절 될 수 있음을 알립니다.</p>\n                <p></p>\n                <p>또한 명의도용의 목적으로 가입 시 민/형사상 책임을 물을 수 있습니다.</p>\n                <p></p>\n                <br />\n                <p>\n                    <b>※ 가입 조건 안내 ※</b>\n                </p>\n                <p></p>\n                <p>● 신용불량 / 체납 / 할부불가 / 연체폰 모두 본인명의로 개통 가능합니다.</p>\n                <p>● 분실폰에서는 사용할 수 없습니다.</p>\n                <p>● 명의 당 1회선만 사용 가능합니다.</p>\n                <p>● 1+2 개통 시 1달 요금으로 총 3월(90일) 사용 가능합니다.</p>\n                <p>● 구비서류 첨부 시 신분증/운전면허증/복지카드/임시발급증/여권 모두 첨부 가능합니다.</p>\n                <p></p>\n                <p>★ 본인인증/폰뱅킹/공인인증서/카카오뱅크 인증 가능</p>\n                <p>★ 소액결제 및 컬러링불가 / 042-114 등 정보이용료 발생 통화는 추가요금 발생</p>\n                <p>★ 영상통화/대표번호 통화 요금제에 따라 50분/300분 제공 (구매 상세페이지 참고)</p>\n                <p></p>\n                <p></p>\n                <br />\n                <p>\n                    <b>※ 사용 가능 휴대폰 ※</b>\n                </p>\n                <p></p>\n                <p>2014.07 출시 이후 SK, KT, LG 전 모델 사용 가능 (갤러시 노트5 이상 모두 사용 가능)</p>\n                <p>2014.07 출시 이전 모델은 LG U+ 단말기만 사용 가능</p>\n                <p>아이폰 전 모델 사용 가능</p>\n                <p>외산폰 - 화웨이, OPPO 등 사용 불가</p>\n                <p></p>\n                <p></p>\n                <br />\n                <p>\n                    <b>※ 구비서류 안내 ※</b>\n                </p>\n                <p></p>\n                <p>신청서 작성 후 필요서류는 신청서에 첨부파일로 보내주시거나,</p>\n                <p>신청서 작성 후 휴대폰에서 아래 메일로 보내주셔도 됩니다.</p>\n                <p></p>\n                <p></p>\n                <p>고객센터 : 042-672-4560 (내선 1번)</p>\n                <p></p>\n                <p>E-mail : innhh@naver.com </p>\n                <p></p>\n            </DocChecker>\n\n            <MoveSteps moveNext={moveNext} validate={validate}></MoveSteps>\n        </>\n    );\n};\n\nexport default BasicInfo;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst StyledTextField = withStyles({\n    root: {\n        marginBottom: \"1rem\",\n        \"& .MuiInputBase-root\": {\n            fontSize: \"0.9rem\",\n        },\n        \"& .MuiFormLabel-root\": {\n            fontSize: \"0.9rem\",\n        },\n    },\n})(TextField);\n\nconst InputControl = ({\n    name,\n    label,\n    value,\n    onChange,\n    maxLength,\n    numberOnly,\n    phoneNumber,\n    bankNumber,\n    disabled,\n    multiline,\n}) => {\n    if (phoneNumber) {\n        maxLength = 13;\n    }\n    const handleChange = (e) => onChange(e.target.value);\n    const handleInput = (e) => {\n        if (numberOnly || phoneNumber) {\n            e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\n        } else if (bankNumber) {\n            e.target.value = e.target.value.replace(/[^0-9-]/g, \"\");\n        }\n        if (phoneNumber) {\n            e.target.value = getPhoneNumber(e.target.value);\n        }\n        if (maxLength && e.target.value.length > maxLength) {\n            e.target.value = e.target.value.slice(0, maxLength);\n        }\n    };\n    const getPhoneNumber = (str) => {\n        var tmp = \"\";\n        if (str.length < 4) {\n            return str;\n        } else if (str.length < 7) {\n            tmp += str.substr(0, 3);\n            tmp += \"-\";\n            tmp += str.substr(3);\n            return tmp;\n        } else if (str.length < 11) {\n            tmp += str.substr(0, 3);\n            tmp += \"-\";\n            tmp += str.substr(3, 3);\n            tmp += \"-\";\n            tmp += str.substr(6);\n            return tmp;\n        } else {\n            tmp += str.substr(0, 3);\n            tmp += \"-\";\n            tmp += str.substr(3, 4);\n            tmp += \"-\";\n            tmp += str.substr(7);\n            return tmp;\n        }\n    };\n\n    return (\n        <StyledTextField\n            fullWidth\n            multiline={multiline}\n            rowsMax={4}\n            id={name}\n            name={name}\n            label={label}\n            size=\"small\"\n            value={value}\n            onChange={handleChange}\n            onInput={handleInput}\n            disabled={disabled}\n        />\n    );\n};\n\nexport default InputControl;\n","import React, { useState } from \"react\";\nimport { Dialog, Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport DaumPostcode from \"react-daum-postcode\";\n\nconst SearchButton = styled(Button)`\n    margin-left: 1rem !important;\n`;\n\nconst Postcode = ({ onComplete }) => {\n    const [open, setOpen] = useState(false);\n\n    const handleClick = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const handleComplete = (data) => {\n        let fullAddress = data.address;\n        let extraAddress = \"\";\n\n        if (data.userSelectedType === \"R\") {\n            fullAddress = data.roadAddress;\n        } else {\n            fullAddress = data.jibunAddress;\n        }\n\n        if (data.userSelectedType === \"R\") {\n            if (data.bname !== \"\") {\n                extraAddress += data.bname;\n            }\n            if (data.buildingName !== \"\") {\n                extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n            }\n            fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\n        }\n\n        onComplete && onComplete(data.zonecode, fullAddress);\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <SearchButton variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleClick}>\n                검색\n            </SearchButton>\n            <Dialog open={open} onClose={handleClose}>\n                <DaumPostcode onComplete={handleComplete} />\n            </Dialog>\n        </>\n    );\n};\n\nexport default Postcode;\n","import React from \"react\";\nimport { FormControlLabel, Switch, Collapse } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport palette from \"../../utils/palette\";\nimport MoveSteps from \"../MoveSteps\";\nimport InputControl from \"../InputControl\";\nimport SearchAddress from \"../SearchAddress\";\n\nconst SubContainer = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst SubTitle = styled.div`\n    font-size: 0.8rem;\n    color: ${palette.gray};\n    margin-top: 0.5rem;\n`;\n\nconst StyledFormControlLabel = withStyles({\n    root: {\n        color: palette.gray,\n        marginTop: \"0.5rem\",\n        marginLeft: \"0\",\n        \"& .MuiTypography-body1\": {\n            fontSize: \"0.9rem\",\n        },\n    },\n})(FormControlLabel);\n\nconst ApplicantInfo = ({ applyData, setApplyData, movePrev, moveNext, showAlert }) => {\n    const validate = () => {\n        if (!applyData.uname) {\n            showAlert(\"신청자명을 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.birth) {\n            showAlert(\"생년월일(6자리)를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.hp2) {\n            showAlert(\"비상연락처(해피콜 받을 번호)를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!emailCheck(applyData.email)) {\n            showAlert(\"올바른 이메일을 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.zip) {\n            showAlert(\"우편번호를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.addr1) {\n            showAlert(\"주소를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.addr2) {\n            showAlert(\"상세주소를 입력해 주시기 바랍니다\");\n            return false;\n        }\n\n        return true;\n    };\n    const emailCheck = (email_address) => {\n        const email_regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/i;\n        if (!email_regex.test(email_address)) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n    const applyOf = (key) => (x) => setApplyData({ ...applyData, [key]: x });\n    const handleAddress = (zip, addr) => {\n        setApplyData({ ...applyData, zip: zip, addr1: addr });\n    };\n    const handleMinor = (e) => {\n        setApplyData({ ...applyData, minor: e.target.checked });\n    };\n\n    return (\n        <>\n            <InputControl\n                name=\"uname\"\n                label=\"가입자명*\"\n                value={applyData.uname}\n                onChange={applyOf(\"uname\")}\n                maxLength=\"20\"\n            ></InputControl>\n            <InputControl\n                name=\"birth\"\n                label=\"생년월일(6자리)* 예) 800516\"\n                value={applyData.birth}\n                onChange={applyOf(\"birth\")}\n                maxLength=\"6\"\n                numberOnly\n            ></InputControl>\n            <InputControl\n                name=\"hp2\"\n                label=\"비상연락처(해피콜 받을 번호)*\"\n                value={applyData.hp2}\n                onChange={applyOf(\"hp2\")}\n                phoneNumber\n            ></InputControl>\n            <InputControl\n                name=\"email\"\n                label=\"이메일*\"\n                value={applyData.email}\n                onChange={applyOf(\"email\")}\n                maxLength=\"50\"\n            ></InputControl>\n\n            <SubContainer>\n                <InputControl\n                    name=\"zip\"\n                    label=\"우편번호*\"\n                    value={applyData.zip}\n                    onChange={applyOf(\"zip\")}\n                    maxLength=\"20\"\n                    numberOnly\n                ></InputControl>\n                <SearchAddress onComplete={handleAddress}></SearchAddress>\n            </SubContainer>\n\n            <InputControl\n                name=\"addr1\"\n                label=\"주소*\"\n                value={applyData.addr1}\n                onChange={applyOf(\"addr1\")}\n                maxLength=\"100\"\n            ></InputControl>\n            <InputControl\n                name=\"addr2\"\n                label=\"상세주소*\"\n                value={applyData.addr2}\n                onChange={applyOf(\"addr2\")}\n                maxLength=\"100\"\n            ></InputControl>\n\n            <SubTitle>희망번호 4자리</SubTitle>\n            <SubContainer>\n                <InputControl\n                    name=\"hpnumber1\"\n                    label=\"1순위\"\n                    value={applyData.hpnumber}\n                    onChange={applyOf(\"hpnumber\")}\n                    maxLength=\"4\"\n                    numberOnly\n                    marginleft\n                ></InputControl>\n                <InputControl\n                    name=\"hpnumber2\"\n                    label=\"2순위\"\n                    value={applyData.hpnumber2}\n                    onChange={applyOf(\"hpnumber2\")}\n                    maxLength=\"4\"\n                    numberOnly\n                ></InputControl>\n                <InputControl\n                    name=\"hpnumber3\"\n                    label=\"3순위\"\n                    value={applyData.hpnumber3}\n                    onChange={applyOf(\"hpnumber3\")}\n                    maxLength=\"4\"\n                    numberOnly\n                ></InputControl>\n            </SubContainer>\n\n            <InputControl\n                name=\"memo\"\n                label=\"추가 요청사항\"\n                value={applyData.memo}\n                onChange={applyOf(\"memo\")}\n                multiline\n                maxLength=\"200\"\n            ></InputControl>\n\n            <StyledFormControlLabel\n                control={<Switch name=\"minor\" checked={applyData.minor} onChange={handleMinor} color=\"secondary\" />}\n                label=\"미성년자 여부\"\n                labelPlacement=\"start\"\n            />\n            <Collapse in={applyData.minor}>\n                <InputControl\n                    name=\"parent\"\n                    label=\"법정대리인 이름\"\n                    value={applyData.parent}\n                    onChange={applyOf(\"parent\")}\n                    maxLength=\"20\"\n                ></InputControl>\n                <InputControl\n                    name=\"parent_birth\"\n                    label=\"법정대리인 생년월일\"\n                    value={applyData.parent_birth}\n                    onChange={applyOf(\"parent_birth\")}\n                    maxLength=\"6\"\n                    numberOnly\n                ></InputControl>\n                <InputControl\n                    name=\"parent_tel\"\n                    label=\"법정대리인 연락처\"\n                    value={applyData.parent_tel}\n                    onChange={applyOf(\"parent_tel\")}\n                    phoneNumber\n                ></InputControl>\n                <InputControl\n                    name=\"parent_rel\"\n                    label=\"가입자와의 관계\"\n                    value={applyData.parent_rel}\n                    onChange={applyOf(\"parent_rel\")}\n                    maxLength=\"20\"\n                ></InputControl>\n            </Collapse>\n\n            <MoveSteps movePrev={movePrev} moveNext={moveNext} validate={validate}></MoveSteps>\n        </>\n    );\n};\n\nexport default ApplicantInfo;\n","import React from \"react\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport palette from \"../../utils/palette\";\nimport { pay_gubunOptions, pay_methodOptions } from \"../../utils/constants\";\nimport MoveSteps from \"../MoveSteps\";\nimport InputControl from \"../InputControl\";\nimport SelectControl from \"../SelectControl\";\nimport SearchAddress from \"../SearchAddress\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst SubContainer = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst SubTitle = styled.div`\n    font-size: 0.8rem;\n    color: ${palette.gray};\n    margin-top: 0.5rem;\n`;\n\nconst SubDescription = styled.div`\n    font-size: 0.8rem;\n    color: ${palette.pink};\n    margin-top: 0.5rem;\n`;\n\nconst StyledFormControlLabel = withStyles({\n    root: {\n        color: palette.gray,\n        marginTop: \"1rem\",\n        marginLeft: \"0\",\n        \"& .MuiTypography-body1\": {\n            fontSize: \"0.8rem\",\n            marginLeft: \"0.5rem\",\n        },\n        \"& .PrivateSwitchBase-root-3\": {\n            padding: \"0\",\n        },\n    },\n})(FormControlLabel);\n\nconst FeeInfo = ({ applyData, setApplyData, movePrev, moveNext, showAlert }) => {\n    const validate = () => {\n        if (!applyData.pzip) {\n            showAlert(\"요금청구 우편번호를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.paddr1) {\n            showAlert(\"요금청구 주소를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.paddr2) {\n            showAlert(\"요금청구 상세주소를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.bank) {\n            showAlert(\"은행명을 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.banknum) {\n            showAlert(\"계좌번호를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.bankowner) {\n            showAlert(\"예금주를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.owner_real) {\n            showAlert(\"가입자와의 관계를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.owner_birth) {\n            showAlert(\"예금주 생년월일을 입력해 주시기 바랍니다\");\n            return false;\n        }\n\n        return true;\n    };\n    const applyOf = (key) => (x) => setApplyData({ ...applyData, [key]: x });\n    const handleAddress = (zip, addr) => {\n        setApplyData({ ...applyData, pzip: zip, paddr1: addr });\n    };\n    const handleCopyAddress = (e) => {\n        if (e.target.checked) {\n            setApplyData({\n                ...applyData,\n                paddr_copy: e.target.checked,\n                pzip: applyData.zip,\n                paddr1: applyData.addr1,\n                paddr2: applyData.addr2,\n            });\n        } else {\n            setApplyData({ ...applyData, paddr_copy: e.target.checked });\n        }\n    };\n\n    return (\n        <Container>\n            <SelectControl\n                name=\"pay_gubun\"\n                label=\"요금청구 방법*\"\n                options={pay_gubunOptions}\n                value={applyData.pay_gubun}\n                onChange={applyOf(\"pay_gubun\")}\n            ></SelectControl>\n            <SelectControl\n                name=\"pay_method\"\n                label=\"요금확인 방법*\"\n                options={pay_methodOptions}\n                value={applyData.pay_method}\n                onChange={applyOf(\"pay_method\")}\n            ></SelectControl>\n\n            <StyledFormControlLabel\n                control={<Checkbox value={applyData.paddr_copy} color=\"default\" onChange={handleCopyAddress} />}\n                label=\"가입정보 주소와 동일합니다\"\n            />\n            <SubContainer>\n                <InputControl\n                    name=\"pzip\"\n                    label=\"요금청구 우편번호*\"\n                    value={applyData.pzip}\n                    onChange={applyOf(\"pzip\")}\n                    maxLength=\"20\"\n                    numberOnly\n                    disabled={applyData.paddr_copy}\n                ></InputControl>\n                <SearchAddress onComplete={handleAddress}></SearchAddress>\n            </SubContainer>\n\n            <InputControl\n                name=\"paddr1\"\n                label=\"요금청구 주소*\"\n                value={applyData.paddr1}\n                onChange={applyOf(\"paddr1\")}\n                maxLength=\"100\"\n                disabled={applyData.paddr_copy}\n            ></InputControl>\n            <InputControl\n                name=\"paddr2\"\n                label=\"요금청구 상세주소*\"\n                value={applyData.paddr2}\n                onChange={applyOf(\"paddr2\")}\n                maxLength=\"100\"\n                disabled={applyData.paddr_copy}\n            ></InputControl>\n            <br />\n            <SubTitle>자동이체 정보</SubTitle>\n            <InputControl\n                name=\"bank\"\n                label=\"은행명*\"\n                value={applyData.bank}\n                onChange={applyOf(\"bank\")}\n                maxLength=\"30\"\n            ></InputControl>\n            <InputControl\n                name=\"banknum\"\n                label=\"계좌번호*\"\n                value={applyData.banknum}\n                onChange={applyOf(\"banknum\")}\n                maxLength=\"50\"\n                bankNumber\n            ></InputControl>\n            <InputControl\n                name=\"bankowner\"\n                label=\"예금주*\"\n                value={applyData.bankowner}\n                onChange={applyOf(\"bankowner\")}\n                maxLength=\"20\"\n            ></InputControl>\n            <InputControl\n                name=\"owner_real\"\n                label=\"가입자와의 관계*\"\n                value={applyData.owner_real}\n                onChange={applyOf(\"owner_real\")}\n                maxLength=\"20\"\n            ></InputControl>\n            <InputControl\n                name=\"owner_birth\"\n                label=\"예금주 생년월일(6자리)*\"\n                value={applyData.owner_birth}\n                onChange={applyOf(\"owner_birth\")}\n                maxLength=\"6\"\n                numberOnly\n            ></InputControl>\n            <SubDescription>\n                ※ 자동이체 정보는 은행계좌로만 입력해야 합니다. ( 신용카드 입력 절대 불가. 추후 신용카드로 변경 가능 )\n            </SubDescription>\n\n            <MoveSteps movePrev={movePrev} moveNext={moveNext} validate={validate}></MoveSteps>\n        </Container>\n    );\n};\n\nexport default FeeInfo;\n","import React from \"react\";\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport palette from \"../../utils/palette\";\nimport InputControl from \"../InputControl\";\nimport SearchAddress from \"../SearchAddress\";\nimport MoveSteps from \"../MoveSteps\";\n\nconst StyledFormControlLabel = withStyles({\n    root: {\n        color: palette.gray,\n        marginTop: \"1rem\",\n        marginLeft: \"0\",\n        \"& .MuiTypography-body1\": {\n            fontSize: \"0.8rem\",\n            marginLeft: \"0.5rem\",\n        },\n        \"& .PrivateSwitchBase-root-3\": {\n            padding: \"0\",\n        },\n    },\n})(FormControlLabel);\n\nconst SubContainer = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst DeliveryInfo = ({ applyData, setApplyData, movePrev, moveNext, showAlert }) => {\n    const validate = () => {\n        if (!applyData.rname) {\n            showAlert(\"수령인을 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.rhp) {\n            showAlert(\"배송지 연락처를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.rzip) {\n            showAlert(\"배송지 우편번호를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.raddr1) {\n            showAlert(\"배송지 주소를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.raddr2) {\n            showAlert(\"배송지 상세주소를 입력해 주시기 바랍니다\");\n            return false;\n        }\n        return true;\n    };\n    const applyOf = (key) => (x) => setApplyData({ ...applyData, [key]: x });\n    const handleAddress = (zip, addr) => {\n        setApplyData({ ...applyData, rzip: zip, raddr1: addr });\n    };\n    const handleCopyAddress = (e) => {\n        if (e.target.checked) {\n            setApplyData({\n                ...applyData,\n                raddr_copy: e.target.checked,\n                rzip: applyData.zip,\n                raddr1: applyData.addr1,\n                raddr2: applyData.addr2,\n            });\n        } else {\n            setApplyData({ ...applyData, raddr_copy: e.target.checked });\n        }\n    };\n\n    return (\n        <>\n            <InputControl\n                name=\"rname\"\n                label=\"수령인*\"\n                value={applyData.rname}\n                onChange={applyOf(\"rname\")}\n                maxLength=\"20\"\n            ></InputControl>\n            <InputControl\n                name=\"rhp\"\n                label=\"배송지 연락처*\"\n                value={applyData.rhp}\n                onChange={applyOf(\"rhp\")}\n                phoneNumber\n            ></InputControl>\n\n            <StyledFormControlLabel\n                control={<Checkbox value={applyData.raddr_copy} color=\"default\" onChange={handleCopyAddress} />}\n                label=\"가입정보 주소와 동일합니다\"\n            />\n            <SubContainer>\n                <InputControl\n                    name=\"rzip\"\n                    label=\"배송지 우편번호*\"\n                    value={applyData.rzip}\n                    onChange={applyOf(\"rzip\")}\n                    maxLength=\"20\"\n                    numberOnly\n                    disabled={applyData.raddr_copy}\n                ></InputControl>\n                <SearchAddress onComplete={handleAddress}></SearchAddress>\n            </SubContainer>\n\n            <InputControl\n                name=\"raddr1\"\n                label=\"배송지 주소*\"\n                value={applyData.raddr1}\n                onChange={applyOf(\"raddr1\")}\n                maxLength=\"100\"\n                disabled={applyData.raddr_copy}\n            ></InputControl>\n            <InputControl\n                name=\"raddr2\"\n                label=\"배송지 상세주소*\"\n                value={applyData.raddr2}\n                onChange={applyOf(\"raddr2\")}\n                maxLength=\"100\"\n                disabled={applyData.raddr_copy}\n            ></InputControl>\n\n            <MoveSteps movePrev={movePrev} moveNext={moveNext} validate={validate}></MoveSteps>\n        </>\n    );\n};\n\nexport default DeliveryInfo;\n","import React from \"react\";\nimport { Collapse } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport styled from \"styled-components\";\nimport SelectControl from \"../SelectControl\";\nimport { paper_methodOptions } from \"../../utils/constants\";\nimport MoveSteps from \"../MoveSteps\";\nimport DocChecker from \"../DocChecker\";\nimport idcard_correct from \"../../image/idcard_correct.png\";\nimport idcard_wrong from \"../../image/idcard_wrong.png\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst StyledUl = styled.ul`\n    padding-inline-start: 0;\n    font-size: 0.8rem;\n`;\n\nconst StyledInput = styled.input`\n    margin-top: 0.3rem;\n`;\n\nconst StyledAlert = styled(Alert)`\n    margin-top: 1rem;\n`;\n\nconst SubContainer = styled.div`\n    margin-top: 2rem;\n`;\n\nconst RecieptInfo = ({ applyData, setApplyData, movePrev, showAlert, finish }) => {\n    const validate = () => {\n        if (!applyData.contractCheck) {\n            showAlert(\"약정관련 안내를 확인해 주시기 바랍니다\");\n            return false;\n        }\n        if (!applyData.privateInfoCheck) {\n            showAlert(\"약관 동의서 및 개인정보 취급방침에 동의해 주시기 바랍니다\");\n            return false;\n        }\n        return true;\n    }\n    const applyOf = (key) => (x) => setApplyData({ ...applyData, [key]: x });\n    const handleMovePrev = () => {\n        const isOk = window.confirm(\"첨부한 파일이 초기화됩니다. 이전으로 이동하시겠습니까?\");\n        if (isOk) {\n            movePrev();\n        }\n    };\n    const agreeWithContract = () => {\n        setApplyData({ ...applyData, contractCheck: true });\n    };\n    const agreeWithPrivateInfo = () => {\n        setApplyData({ ...applyData, privateInfoCheck: true });\n    };\n\n    return (\n        <Container>\n            <SelectControl\n                name=\"paper_method\"\n                label=\"구비서류 접수방법*\"\n                options={paper_methodOptions}\n                value={applyData.paper_method}\n                onChange={applyOf(\"paper_method\")}\n            ></SelectControl>\n\n            <Collapse in={applyData.paper_method === \"파일첨부\"}>\n                <StyledInput type=\"file\" name=\"b_file[]\" maxLength=\"512000\" />\n                <StyledInput type=\"file\" name=\"b_file[]\" maxLength=\"512000\" />\n                <StyledInput type=\"file\" name=\"b_file[]\" maxLength=\"512000\" />\n\n                <StyledAlert severity=\"warning\">\n                    <div>구비서류 등록시 주의사항</div>\n                    <StyledUl>\n                        <li>각 파일의 용량은 500kb 미만만 첨부가 가능합니다</li>\n                        <li>\n                            청소년 고객은 법정대리인 신분증(앞면)과 가족관계증명서(3개월 이내 발급본)을 스캔하여\n                            첨부바랍니다 (첨부가 어려운 경우에는 판매자에게 별도 문의 바랍니다)\n                        </li>\n                        <li>예금주가 명의자와 다른 경우에는 예금주 신분증도 함께 첨부해 주셔야 합니다</li>\n                    </StyledUl>\n                    <div style={{ fontSize: \"0.8rem\" }}>테두리가 보이는 스캔본</div>\n                    <img src={idcard_correct} width=\"100%\" alt=\"신분증 견본 옳은\"></img>\n                    <div style={{ fontSize: \"0.8rem\" }}>테두리가 잘린 스캔본 불가</div>\n                    <img src={idcard_wrong} width=\"100%\" alt=\"신분증 견본 잘못된\"></img>\n                </StyledAlert>\n            </Collapse>\n\n            <SubContainer>\n                <DocChecker check={applyData.contractCheck} title=\"약정관련 안내\" hadleAgree={agreeWithContract}>\n                    <div>\n                        1. 최소회선유지기간(186일)이내 일시정지, 명의변경, 기기변경,번호이동은 불가합니다. <br />\n                        2. 가입요금제 93일이내변경,무통화,일시정지, 명의변경, 기기변경, 타사 번호이동시 위약금\n                        청구됩니다.\n                        <br />\n                        3. 불법 대포폰 신청및 폰파라치 신고 목적등 (불편법구매) 당사에 과징금 및 손해를 입혔을 시 <br />\n                        이에 상응하는 피해금액을 청구합니다.\n                        <br />\n                        4. 개통후 3개월간 발신통화는 매월 5분이상 발신되어야 합니다. (불편법구매방지목적)\n                        <br />\n                        <br />\n                        본인은 위 내용을 숙지하였으며, 이에 동의합니다.\n                    </div>\n                </DocChecker>\n\n                <DocChecker\n                    check={applyData.privateInfoCheck}\n                    title=\"약관 동의서 및 개인정보 취급방침\"\n                    hadleAgree={agreeWithPrivateInfo}\n                >\n                    <div>\n                        약관동의서 및 개인정보 취급방침\n                        <br />\n                        <br />\n                        본 신청서에 기재된 본인의 정보 및 서비스 이용과정에서 생성되는 본인의 정보는 , 및 의 규정에 따라\n                        휴대폰 개통및 서비스 목적으로 귀사가 수집,\n                        <br />\n                        이용, 제공 및 취급 위탁을 위해 본인의 동의를 얻거나 본인에게 위 내용을 고지ㆍ공개하여야 하는\n                        정보입니다.\n                        <br />\n                        이에 본인은 귀사의 이동전화 서비스, 부가서비스 및 개인맞춤서비스, 마케팅정보 제공서비스 등을\n                        제공받기 위해 다음의 내용을 확인하고, 귀사가 본인의 개인정보ㆍ신용정보를 다음과같이 수집, 이용\n                        제공 및 취급위탁하는 것에 동의합니다.\n                        <br />\n                        <br />\n                        *귀사는 개통과 관련되지 않은 마케팅 및 선택적인 동의에 대한 고객정보를 제공하지 않습니다.*\n                        <br />\n                        *개통후 3개월까지 가입정보는 보관되며, 3개월이후 가입에 관한 내역은 지체없이 파기합니다.*\n                        <br />\n                        <br />\n                        1. 개인정보 수집ㆍ이용동의 및 판매조건 동의\n                        <br />\n                        <br />\n                        (SK텔레콤㈜,KT(주),LG텔레콤(주)귀중),MVNO(알뜰폰)등의 가입통신사에 제공.\n                        <br />\n                        가. 개인정보의 수집ㆍ이용 목적\n                        <br />\n                        (1) 서비스 제공 및 본인식별 등 : 이동전화서비스, 멤버쉽 서비스, 부가서비스, 통신과금서비스,\n                        제휴서비스, 개인맞춤서비스, 광고서비스, 본인확인서비스 등 제반서비스(이하 ‘서비스’) 제공 및 이와\n                        관련된 본인 확인 또는 인증, 결제절차진행(통신과금서비스), 통화품질 조사 등 서비스 품질 확인,\n                        정상개통 여부 확인 및 미납 안내 등<br />\n                        <br />\n                        서비스 제공 관련 연락\n                        <br />\n                        (2) 서비스 관련 정보 제공 등 : 상품 배송, 고지사항 전달, 본인의사 확인, 서비스 관련 상담·불만\n                        처리,\n                        <br />\n                        서비스 이용관련 혜택·유의사항·편의사항 등 정보 제공, 신규 서비스나 이벤트 관련 정보 및 광고 전송\n                        <br />\n                        (3) 요금 정산 및 과금 : '서비스' 이용 요금 정산·청구·수납·자동이체·추심, 청구서 송부, 요금 관련\n                        <br />\n                        상담·불만 처리, 요금관련 혜택·유의사항·편의사항 등 정보 제공, 신규서비스나 이벤트 관련정보 및\n                        광고전송\n                        <br />\n                        (4) 통계분석 : 개인을 식별할 수 없는 인구통계학적 분석자료 또는\n                        <br />\n                        지역·시장 조사 자료(연령별, 성별, 지역별 통계분석, 시장조사 등) 등 작성, 이용, 제공\n                        <br />\n                        (5) 개인 맞춤서비스 제공 : 개인정보, 위치정보, 생성정보 및 이를 조합·분석한 정보를 이용한,\n                        <br />\n                        요금제 등의 상품 및 서비스 개발 / 서비스 가입 신청·이용 중 문의 등 제반 고객 응대 시<br />\n                        고객 맞춤 상담 제공 / 개인 맞춤 상품 서비스 혜택 또는 개인 맞춤 광고 제안 및 제공 /<br />\n                        악성코드 분석·차단 서비스 제공 / 분실 단말 관리 서비스 제공\n                        <br />\n                        <br />\n                        나. 수집하는 개인정보의 항목\n                        <br />\n                        (1) 식별정보 : 성명(법인명), 주민(법인)등록번호, 여권번호, 외국인등록번호, 전화번호,\n                        주민등록번호 대체수단\n                        <br />\n                        (2) 연락처정보 : 주소, 전화번호, e-mail 주소\n                        <br />\n                        (3) 거래정보 : 통신과금서비스 제공에 필요한 거래정보\n                        <br />\n                        (4) 계좌정보 : 계좌(카드)번호, 예금주명 등<br />\n                        (5) 생성정보 : 발·수신번호(통화상대방번호 포함), 통화시각, 사용도수, 서비스이용기록, 접속로그,\n                        쿠키,\n                        <br />\n                        접속 IP 정보(도메인 주소 정보 및 접속 URL 정보 포함), 결제기록, 이용정지기록, 멤버쉽 정보(멤버쉽\n                        가입고객에 한함),\n                        <br />\n                        기타 요금 과금에 필요한 데이터 및 이를 조합하여 생성되는 정보(요약개인정보, 데이터마이닝 분석 및\n                        <br />\n                        고객세분화 정보, 선호도, 라이프스타일, 사회적관계 추정 정보), Application 사용관련 정보(사용\n                        App.정보, 사용량 등)\n                        <br />\n                        (6) 기타 서비스 제공 관련 필요 정보 : 2.에 따른 개인위치정보, 단말기 정보(모델, IMEI번호, USIM\n                        번호(ICCID, IMSI 등),\n                        <br />\n                        단말기 S/W버전 정보, MAC Address 등), 직업, 국가유공자 증명·복지할인 증명 등 각종 증명,\n                        <br />\n                        부가서비스·번호이동·할부매매계약 내역, 이동전화 서비스 가입 및 해지일·이동전화 가입 기간 등\n                        <br />\n                        (5) 생성정보 : 발·수신번호(통화상대방번호 포함), 통화시각, 사용도수, 서비스이용기록, 접속로그,\n                        쿠키,\n                        <br />\n                        접속 IP 정보, 결제기록, 이용정지기록, 멤버쉽 정보(멤버쉽 가입고객에 한함),\n                        <br />\n                        기타 요금 과금에 필요한 데이터 및 이를 조합하여 생성되는 정보(요약개인정보, 데이터마이닝 분석 및\n                        <br />\n                        고객세분화 정보, 선호도, 라이프스타일, 사회적관계 추정 정보),\n                        <br />\n                        Application 사용관련 정보(사용 App.정보, 사용량 등)\n                        <br />\n                        (6) 기타 서비스 제공 관련 필요 정보 : 2.에 따른 개인위치정보, 단말기 정보(모델, IMEI번호,\n                        <br />\n                        USIM 번호(ICCID, IMSI 등), 단말기 S/W버전 정보 등), 직업, 국가유공자 증명·복지할인 증명 등<br />\n                        각종 증명, 부가서비스·번호이동·할부매매계약 내역, 이동전화 서비스 가입 및 해지일·이동전화 가입\n                        기간 등<br />\n                        ※ 위 정보는 가입 당시 정보 뿐만 아니라 정보 수정으로 변경된 정보를 포함합니다\n                        <br />\n                        <br />\n                        다. 개인정보의 보유기간\n                        <br />\n                        개인정보를 제공받은 제3자는 개인정보의 수집목적 또는 제공받은 목적을 달성한 때에는 당해\n                        <br />\n                        개인정보를 지체없이 파기합니다.(최대 보유기간은 3개월로한다)\n                        <br />\n                        <br />\n                        <br />\n                        가. 법령에 따로 정하는 경우에는 해당 기간까지 보유\n                        <br />\n                        나. 요금 관련 분쟁 해결을 위해 해지 후 6개월까지\n                        <br />\n                        (단, 해지고객이 이용요금을 납부하지 않았거나 요금 관련 분쟁이 계속될 경우에는 해결시까지)\n                        <br />\n                        <br />\n                        2.통신사의 정책변경 및 기기입고 불가등 불가항적인 요소의 정책변경등으로 서비스의 취소 및 판매\n                        취소를 할수 있다.\n                        <br />\n                        <br />\n                        <br />\n                        - 본 상품의 배송 진행관련 정보를 문자로 구매자에게 통보할수있다\n                        <br />\n                        - 본 상품의 개통을 한 고객대상 안내 문자 및 마케팅문자를 발송할수있다(단 고객이 원하지않을경우\n                        발송을 중단한다.)\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        * 계약의 이행을 위한 개인정보 취급위탁 내역은 <br />\n                        통신사 홈페이지(www.sktelecom.com) (http://www.kt.com/main.jsp) (http://www.uplus.co.kr/)의\n                        개인정보취급방침에서 모두 공개하고 있습니다.\n                        <br />\n                        <br />\n                        본인은 위 1항,2항의 내용을 숙지하였으며, 이에 동의합니다.\n                    </div>\n                </DocChecker>\n            </SubContainer>\n\n            <MoveSteps movePrev={handleMovePrev} validate={validate} finish={finish}></MoveSteps>\n        </Container>\n    );\n};\n\nexport default RecieptInfo;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Stepper, Step, StepLabel, StepContent } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport styled from \"styled-components\";\nimport emailjs from \"emailjs-com\";\nimport {\n    callplanOptions,\n    hpcolorOptions,\n    pay_gubunOptions,\n    pay_methodOptions,\n    paper_methodOptions,\n} from \"./utils/constants\";\nimport SnackAlert from \"./components/SnackAlert\";\nimport Header from \"./components/Header\";\nimport BasicInfo from \"./components/steps/BasicInfo\";\nimport ApplicantInfo from \"./components/steps/ApplicantInfo\";\nimport FeeInfo from \"./components/steps/FeeInfo\";\nimport DeliveryInfo from \"./components/steps/DeliveryInfo\";\nimport RecieptInfo from \"./components/steps/RecieptInfo\";\n\nconst Container = styled.div`\n    margin: auto;\n    max-width: 500px;\n`;\n\nconst AlertMessage = styled(Alert)`\n    font-size: 0.7rem !important;\n    padding-top: 3px !important;\n    padding-bottom: 3px !important;\n`;\n\nfunction App() {\n    const [activeStep, setActiveStep] = useState(0);\n    const [completeSteps, setCompleteSteps] = useState([]);\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [applyData, setApplyData] = useState({\n        callplan: callplanOptions[0], //요금제\n        hpcolor: hpcolorOptions[0], //옵션\n        conditionCheck: false, //판매조건 안내사항 동의\n        uname: \"\", //가입자명\n        birth: \"\", //생년월일\n        hp2: \"\", //비상연락처\n        email: \"\", //이메일\n        zip: \"\", //우편번호\n        addr1: \"\", //주소1\n        addr2: \"\", //주소2\n        hpnumber: \"\", //희망번호 4자리\n        memo: \"\", //추가 요청사항\n        minor: false, //미성년자 여부\n        parent: \"\", //법정대리인 이름\n        parent_birth: \"\", //법정대리인 생년월일\n        parent_tel: \"\", //법정대리인 연락처\n        parent_rel: \"\", //가입자와의 관계\n        pay_gubun: pay_gubunOptions[0], //요금청구 방법\n        pay_method: pay_methodOptions[0], //요금확인 방법\n        paddr_copy: false, //요금청구 주소 복사여부\n        pzip: \"\", //요금청구 우편번호\n        paddr1: \"\", //요금청구 주소1\n        paddr2: \"\", //요금청구 주소2\n        bank: \"\", //은행명\n        banknum: \"\", //계좌번호\n        bankowner: \"\", //예금주\n        owner_real: \"\", //가입자와의 관계\n        owner_birth: \"\", //예금주 생년월일\n        rname: \"\", //수령인\n        rhp: \"\", //배송지 연락처\n        raddr_copy: false, //요금청구 주소 복사여부\n        rzip: \"\", //요금청구 우편번호\n        raddr1: \"\", //요금청구 주소1\n        raddr2: \"\", //요금청구 주소2\n        paper_method: paper_methodOptions[0], //구비서류 접수방법\n        contractCheck: false, //약정관련 동의\n        privateInfoCheck: false, //약관 동의서 및 개인정보 취급방침\n    });\n\n    const regist_form = useRef(null);\n\n    const movePrev = () => {\n        completeSteps[activeStep] = false;\n        completeSteps[activeStep - 1] = false;\n        setCompleteSteps(completeSteps);\n        setActiveStep(activeStep - 1);\n    };\n    const moveNext = () => {\n        completeSteps[activeStep] = true;\n        setCompleteSteps(completeSteps);\n        setActiveStep(activeStep + 1);\n    };\n\n    const showAlert = (message) => {\n        setAlertMessage(message);\n        setAlertOpen(true);\n    };\n    const finish = () => {\n        if (window.confirm(\"입력된 내용으로 신청하시겠습니까?\")) {\n            // emailjs.sendForm(\"service_z4l7v66\", \"template_603jw7e\", regist_form.current);\n            window.alert(\"U+ 알뜰폰 신청이 정상적으로 완료되었습니다\\n빠른 시일내에 확인 후 연락드리도록 하겠습니다\");\n            setTimeout(function () {\n                window.location.reload();\n            }, 0);\n        }\n    };\n\n    //emailjs 초기화\n    useEffect(() => {\n        emailjs.init(\"user_qlV684Rp5lGAe1yESBlBA\");\n    }, []);\n\n    return (\n        <Container>\n            <Header></Header>\n\n            <AlertMessage severity=\"success\">\n                작성하신 정보는 상담 및 접수 확인 외에 다른 용도로 사용되지 않습니다\n            </AlertMessage>\n\n            <form id=\"regist_form\" ref={regist_form}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                    <Step completed={completeSteps[0]}>\n                        <StepLabel>기본정보</StepLabel>\n                        <StepContent>\n                            <BasicInfo\n                                applyData={applyData}\n                                setApplyData={setApplyData}\n                                moveNext={moveNext}\n                                showAlert={showAlert}\n                            ></BasicInfo>\n                        </StepContent>\n                    </Step>\n\n                    <Step completed={completeSteps[1]}>\n                        <StepLabel>가입자 정보</StepLabel>\n                        <StepContent>\n                            <ApplicantInfo\n                                applyData={applyData}\n                                setApplyData={setApplyData}\n                                movePrev={movePrev}\n                                moveNext={moveNext}\n                                showAlert={showAlert}\n                            ></ApplicantInfo>\n                        </StepContent>\n                    </Step>\n\n                    <Step completed={completeSteps[2]}>\n                        <StepLabel>요금청구 정보</StepLabel>\n                        <StepContent>\n                            <FeeInfo\n                                applyData={applyData}\n                                setApplyData={setApplyData}\n                                movePrev={movePrev}\n                                moveNext={moveNext}\n                                showAlert={showAlert}\n                            ></FeeInfo>\n                        </StepContent>\n                    </Step>\n\n                    <Step completed={completeSteps[3]}>\n                        <StepLabel>배송 정보</StepLabel>\n                        <StepContent>\n                            <DeliveryInfo\n                                applyData={applyData}\n                                setApplyData={setApplyData}\n                                movePrev={movePrev}\n                                moveNext={moveNext}\n                                showAlert={showAlert}\n                            ></DeliveryInfo>\n                        </StepContent>\n                    </Step>\n\n                    <Step completed={completeSteps[4]}>\n                        <StepLabel>구비서류 접수 및 최종신청</StepLabel>\n                        <StepContent>\n                            <RecieptInfo\n                                applyData={applyData}\n                                setApplyData={setApplyData}\n                                movePrev={movePrev}\n                                finish={finish}\n                                showAlert={showAlert}\n                            ></RecieptInfo>\n                        </StepContent>\n                    </Step>\n                </Stepper>\n            </form>\n\n            <SnackAlert open={alertOpen} setOpen={setAlertOpen} message={alertMessage}></SnackAlert>\n        </Container>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/idcard_correct.603c8e75.png\";","module.exports = __webpack_public_path__ + \"static/media/idcard_wrong.aaf1af9e.png\";"],"sourceRoot":""}